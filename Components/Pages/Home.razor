@page "/home"
@inject UserService UserService

<NavMenu></NavMenu>
<MudLayout>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            <!-- Dashboard Header -->
            <MudGrid Container Spacing="4">
                <!-- Total Inflow Card -->
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Class="pa-4" Style="background-color: #e0f7fa; border-radius: 12px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Primary">Total Inflow</MudText>
                        <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Primary">
                            $@totalInflow
                        </MudText>
                        <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Dark">Total incoming funds this month</MudText>
                        <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Dark">Transactions: @totalInflowCount</MudText> <!-- Total inflow transactions -->
                    </MudCard>
                </MudItem>

                <!-- Total Outflow Card -->
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Class="pa-4" Style="background-color: #ffebee; border-radius: 12px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Error">Total Outflow</MudText>
                        <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Error">
                            $@totalOutflow
                        </MudText>
                        <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Dark">Total spending this month</MudText>
                        <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Dark">Transactions: @totalOutflowCount</MudText> <!-- Total outflow transactions -->
                    </MudCard>
                </MudItem>

                <!-- Current Balance Card -->
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Class="pa-4" Style="background-color: #c8e6c9; border-radius: 12px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Success">Current Balance</MudText>
                        <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Success">
                            $@currentBalance
                        </MudText>
                        <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Dark">Available funds after all transactions</MudText>
                    </MudCard>
                </MudItem>
            </MudGrid>

            <!-- Financial Overview Charts -->
            <MudGrid Container Spacing="4">
                <!-- Inflow vs Outflow Bar Chart -->
                <MudItem xs="12" sm="6">
                    <MudCard Class="pa-4" Style="border-radius: 12px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Primary">Inflow vs Outflow (Monthly)</MudText>
                        <MudChart ChartType="ChartType.Bar" ChartSeries="@series" XAxisLabels="@XAxisLabels" Width="100%" Height="300px" />
                    </MudCard>
                </MudItem>

                <!-- Expense Breakdown Pie Chart -->
                <MudItem xs="12" sm="6">
                    <MudCard Class="pa-4" Style="border-radius: 12px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Primary">Expense Breakdown</MudText>
                        <MudChart ChartType="ChartType.Pie" InputData="@expenseData" InputLabels="@expenseLabels" Width="100%" Height="300px" />
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private double totalInflow = 0;
    private double totalOutflow = 0;
    private double currentBalance = 0;
    private int totalInflowCount = 0;  // Total number of inflow transactions
    private int totalOutflowCount = 0; // Total number of outflow transactions

    private List<ChartSeries> series = new List<ChartSeries>
    {
        new ChartSeries() { Name = "Inflow", Data = new double[] { 50, 60, 70, 80, 90, 100 } },
        new ChartSeries() { Name = "Outflow", Data = new double[] { 40, 50, 60, 65, 70, 80 } }
    };

    private string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun" };

    private double[] expenseData = { 50, 25, 20, 5 };
    private string[] expenseLabels = { "Food", "Transport", "Entertainment", "Other" };

    protected override async Task OnInitializedAsync()
    {
        // Fetch and calculate the total inflow, outflow, and current balance
        totalInflow = UserService.GetTotalInflow();
        totalOutflow = UserService.GetTotalOutflow();
        currentBalance = UserService.GetRemaingBalance();
        
        // Fetch and calculate the total number of transactions
        totalInflowCount = UserService.GetTotalNumberOfInflows();
        totalOutflowCount = UserService.GetTotalNumberOfOutflows();
    }
}
