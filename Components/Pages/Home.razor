@page "/home"
@using DotnetCourseowork.Models
@inject UserService UserService
@inject NavigationManager NavigationManager
@using MudBlazor

<MudLayout>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            <!-- Dashboard Header -->
            <MudGrid Container Spacing="4" Class="mb-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Primary">Expense Tracker Dashboard</MudText>
                </MudItem>
            </MudGrid>

            <!-- Financial Overview -->
            <MudGrid Container Spacing="4" Class="mb-4">
                @foreach (var card in FinancialCards)
                {
                    <MudItem xs="12" sm="6" md="4">
                        <MudCard Class="pa-4">
                            <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Dark">@card.Title</MudText>
                            <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Dark">
                                $@card.Value
                            </MudText>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>

            <!-- Credit/Debit/Debt Statistics -->
            <MudGrid Container Spacing="4" Class="mb-4">
                <MudItem xs="12" sm="4">
                    <MudCard Class="pa-4">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Dark">Total Credits</MudText>
                        <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Primary">
                            @totalCredits
                        </MudText>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudCard Class="pa-4">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Dark">Total Debits</MudText>
                        <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Error">
                            @totalDebits
                        </MudText>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudCard Class="pa-4">
                        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Dark">Total Debts</MudText>
                        <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Info">
                            @totalDebts
                        </MudText>
                    </MudCard>
                </MudItem>
            </MudGrid>

            <!-- Recent Transactions -->
            <MudGrid Container Spacing="4" Class="mt-4">
                <MudItem xs="12">
                    <MudCard Class="pa-4">
                        <MudText Typo="Typo.h6" Align="Align.Left" Color="Color.Primary">Recent Expenses</MudText>
                        <MudTable Items="@recentExpenses" Hover="true">
                            <HeaderContent>
                                <MudTh>Date</MudTh>
                                <MudTh>Description</MudTh>
                                <MudTh>Amount</MudTh>
                                <MudTh>Actions</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@context.Date.ToString()</MudTd>
                                <MudTd>@context.Description</MudTd>
                                <MudTd>$@context.Amount</MudTd>
                                <MudTd>
                                    <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="@(() => DeleteExpense(context))">Delete</MudButton>
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCard>
                </MudItem>
            </MudGrid>

            <!-- Debts Table -->
            <MudGrid Container Spacing="4" Class="mt-4">
                <MudItem xs="12">
                    <MudCard Class="pa-4">
                        <MudText Typo="Typo.h6" Align="Align.Left" Color="Color.Primary">Debts</MudText>
                        <MudTable Items="@debts" Hover="true">
                            <HeaderContent>
                                <MudTh>Date</MudTh>
                                <MudTh>Description</MudTh>
                                <MudTh>Amount</MudTh>
                                <MudTh>Actions</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@context.Date.ToString()</MudTd>
                                <MudTd>@context.Description</MudTd>
                                <MudTd>$@context.Amount</MudTd>
                                <MudTd>
                                    <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="@(() => DeleteDebt(context))">Delete</MudButton>
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private List<Expense> recentExpenses = new();
    private List<Debt> debts = new();
    private double totalInflow = 0;
    private double totalOutflow = 0;
    private double currentBalance = 0;

    private double totalCredits = 0;
    private double totalDebits = 0;
    private double totalDebts = 0;

    private List<(string Title, string Color, double Value)> FinancialCards => new()
    {
        ("Total Inflow", "Color.Primary", totalInflow),
        ("Total Outflow", "Color.Error", totalOutflow),
        ("Current Balance", "Color.Success", currentBalance)
    };

    protected override async Task OnInitializedAsync()
    {
        totalInflow = UserService.GetTotalInflow();
        totalOutflow = UserService.GetTotalOutflow();
        currentBalance = UserService.GetCurrentUser().TotalBalance;

        recentExpenses = UserService.GetRecentTransactions(5);
        debts = UserService.GetAllDebtsForUser();

        totalCredits = UserService.GetTotalInflow();
        totalDebits = UserService.GetTotalOutflow();
        totalDebts = UserService.GetTotalDebts();
    }

    private void DeleteExpense(Expense expense)
    {
        UserService.DeleteExpense(expense.Id);
        recentExpenses.Remove(expense);
    }

    private void DeleteDebt(Debt debt)
    {
        UserService.DeleteDebt(debt.Id);
        debts.Remove(debt);
    }
}
